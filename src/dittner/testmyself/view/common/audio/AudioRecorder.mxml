<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:audio="dittner.testmyself.view.common.audio.*" xmlns:mp3="dittner.testmyself.view.common.audio.mp3.*">

    <fx:Script><![CDATA[
        import dittner.testmyself.view.common.audio.event.VoiceCommentEvent;
        import dittner.testmyself.view.common.utils.AppColors;
        import dittner.testmyself.view.common.utils.Fonts;

        //--------------------------------------
        //  rawData
        //--------------------------------------
        private var _rawData:ByteArray;
        [Bindable("rawDataChanged")]
        public function get rawData():ByteArray {return _rawData;}
        public function set rawData(value:ByteArray):void {
            if (_rawData != value) {
                _rawData = value;
                showRawDataRecorder();
                dispatchEvent(new Event("rawDataChanged"));
            }
        }

        //--------------------------------------
        //  recordedBytes
        //--------------------------------------
        public function get recordedBytes():ByteArray {
            return mp3Data || rawDataPlayer.recorder.recordedBytes;
        }

        //--------------------------------------
        //  recording
        //--------------------------------------
        private var _recording:Boolean;
        [Bindable("recordingChanged")]
        public function get isRecording():Boolean {return _recording;}
        private function set recording(value:Boolean):void {
            if (_recording != value) {
                _recording = value;
                dispatchEvent(new Event("recordingChanged"));
            }
        }

        //--------------------------------------
        //  mp3Data
        //--------------------------------------
        private var _mp3Data:ByteArray;
        [Bindable("mp3DataChanged")]
        public function get mp3Data():ByteArray {return _mp3Data;}
        public function set mp3Data(value:ByteArray):void {
            if (_mp3Data != value) {
                _mp3Data = value;

                if (mp3Data) showMP3Player();
                else showRawDataRecorder();

                dispatchEvent(new Event("mp3DataChanged"));
            }
        }

        private function showRawDataRecorder():void {
            mP3Player.visible = false;
            rawDataPlayer.visible = true;
        }

        private function showMP3Player():void {
            mP3Player.visible = true;
            rawDataPlayer.visible = false;
        }

        public function clear():void {
            _rawData = null;
            _mp3Data = null;
            rawDataPlayer.clear();
            mP3Player.clear();
            showRawDataRecorder();
        }

        private function mP3Player_removeCommentClickHandler(event:VoiceCommentEvent):void {
            _mp3Data = null;
            showRawDataRecorder();
        }
        ]]></fx:Script>
    <fx:Binding source="rawDataPlayer.recording" destination="recording"/>


    <s:Label text="Запись голоса"
             fontFamily="{Fonts.ROBOTO}"
             fontSize="14"
             color="{AppColors.TEXT_DARK}"/>

    <s:Rect width="100%" top="20" bottom="0">
        <s:fill>
            <s:SolidColor alpha="0"/>
        </s:fill>
        <s:stroke>
            <s:Stroke color="{AppColors.INPUT_BORDER}"/>
        </s:stroke>
    </s:Rect>

    <audio:RawDataPlayer id="rawDataPlayer"
                         top="30" bottom="0"
                         width="100%"
                         audioComment="{rawData}"
                         skinClass="dittner.testmyself.view.common.audio.skins.RawDataPlayerSkin"/>

    <mp3:MP3Player id="mP3Player"
                   top="30" bottom="0"
                   width="100%"
                   visible="false"
                   audioComment="{mp3Data}"
                   skinClass="dittner.testmyself.view.common.audio.skins.MP3PlayerSkin"
                   removeCommentClick="mP3Player_removeCommentClickHandler(event)"/>
</s:Group>
