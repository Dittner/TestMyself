<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
             xmlns:s="library://ns.adobe.com/flex/spark"
             xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
             alpha.disabledStates="0.5" blendMode="normal">

    <fx:Metadata>
    <![CDATA[
        /**
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("dittner.testmyself.deutsch.view.common.input.TextInputForm")]
        ]]>
    </fx:Metadata>

    <fx:Script fb:purpose="styling">
        <![CDATA[
        import dittner.testmyself.deutsch.view.common.utils.AppColors;
        import dittner.testmyself.deutsch.view.common.utils.Fonts;

        import mx.core.FlexVersion;

        private var paddingChanged:Boolean;

        /* Define the skin elements that should not be colorized. */
        static private const exclusions:Array = ["background", "textDisplay", "promptDisplay", "border"];

        /* exclusions before Flex 4.5 for backwards-compatibility purposes */
        static private const exclusions_4_0:Array = ["background", "textDisplay", "promptDisplay"];

        override public function get colorizeExclusions():Array {
            return FlexVersion.compatibilityVersion < FlexVersion.VERSION_4_5 ? exclusions_4_0 : exclusions;
        }

        override protected function measure():void {
            super.measure();
            measuredHeight = hostComponent.showTitle ? TITLE_HEIGHT + 30 : 30;
        }

        private static const TITLE_HEIGHT:uint = 20;

        override protected function updateDisplayList(w:Number, h:Number):void {
            super.updateDisplayList(w, h);

            var bgVerOffset:Number = hostComponent.showTitle ? TITLE_HEIGHT : 0;
            var g:Graphics = graphics;
            g.clear();
            g.lineStyle(1, hostComponent.isValidInput ? AppColors.INPUT_BORDER : AppColors.INVALID_INPUT_BORDER);
            g.beginFill(AppColors.INPUT_CONTENT);
            g.drawRect(0, bgVerOffset, w - 1, h - bgVerOffset - 1);
            g.endFill();

            textDisplay.y = h - textDisplay.height - 6;
        }
        ]]>
    </fx:Script>

    <fx:Script>
        <![CDATA[
        private static const focusExclusions:Array = ["textDisplay"];

        override public function get focusSkinExclusions():Array { return focusExclusions;}
        ]]>
    </fx:Script>

    <s:states>
        <s:State name="normal"/>
        <s:State name="disabled" stateGroups="disabledStates"/>
        <s:State name="normalWithPrompt"/>
        <s:State name="disabledWithPrompt" stateGroups="disabledStates"/>
    </s:states>

    <s:Label id="titleLbl"
             mouseEnabled="false" focusEnabled="false"
             text="{hostComponent.title}"
             top="5"
             width="100%" fontFamily="{Fonts.MYRIAD}" fontSize="16" color="{AppColors.TEXT_DARK}"/>

    <s:RichEditableText id="textDisplay"
                        left="5" right="5"/>

</s:SparkSkin>
