<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:list="dittner.testmyself.deutsch.view.common.list.*"
         xmlns:button="dittner.testmyself.deutsch.view.common.button.*"
         xmlns:utils="dittner.testmyself.deutsch.view.common.utils.*">

    <fx:Script><![CDATA[
        import dittner.testmyself.deutsch.view.common.utils.AppColors;
        import dittner.testmyself.deutsch.view.common.utils.AppSizes;
        import dittner.testmyself.deutsch.view.common.utils.Fonts;

        import mx.collections.ArrayCollection;

        //--------------------------------------
        //  themeColl
        //--------------------------------------
        private var _themeColl:ArrayCollection;
        [Bindable("themeCollChanged")]
        public function get themeColl():ArrayCollection {return _themeColl;}
        public function set themeColl(value:ArrayCollection):void {
            if (_themeColl != value) {
                _themeColl = value;
                dispatchEvent(new Event("themeCollChanged"));
            }
        }

        //--------------------------------------
        //  padding
        //--------------------------------------
        private var _padding:Number = 10;
        [Bindable("paddingChanged")]
        public function get padding():Number {return _padding;}
        public function set padding(value:Number):void {
            if (_padding != value) {
                _padding = value;
                dispatchEvent(new Event("paddingChanged"));
            }
        }
        ]]></fx:Script>

    <s:layout>
        <s:VerticalLayout gap="15" horizontalAlign="center"/>
    </s:layout>

    <list:ListForm id="themesList"
                   width="{width -2*padding}" height="100%"
                   dataProvider="{themeColl}"
                   title="Выберите темы, чтобы отфильтровать слова"
                   itemRenderer="dittner.testmyself.deutsch.view.common.renderer.ThemeItemRenderer"
                   allowMultipleSelection="true">
        <list:layout>
            <s:VerticalLayout gap="0" useVirtualLayout="false"/>
        </list:layout>
    </list:ListForm>

    <s:CheckBox id="useAudioRecordsBox"
                width="{width -2*padding}"
                selected="false"
                label="Озвучивать слова"/>

    <s:Label text="* для теста в качестве слов будут выбраны только те, которые имеют аудиозапись произношения слова"
             fontFamily="{Fonts.ROBOTO_LIGHT}"
             fontSize="12"
             width="100%"
             paddingTop="-15"
             paddingLeft="48" paddingRight="20"
             color="{AppColors.TEXT_GRAY}"/>

    <s:Group width="100%" height="{AppSizes.EDITOR_FOOTER_HEIGHT}">

        <utils:BG width="100%" height="100%" color="{AppColors.SCREEN_HEADER_BG}"/>

        <button:CancelButton id="cancelBtn"
                             width="250"
                             verticalCenter="0"
                             right="{startTestBtn.width + 1.5*padding}"
                             label="Вернуться назад"/>

        <button:ApplyButton id="startTestBtn"
                            width="250"
                            right="{padding}"
                            verticalCenter="0"
                            label="Начать тестирование"/>
    </s:Group>
</s:Group>
