<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:list="dittner.testmyself.deutsch.view.common.list.*"
         xmlns:utils="dittner.testmyself.deutsch.view.common.utils.*"
         xmlns:button="dittner.testmyself.deutsch.view.common.button.*"
         xmlns:common="dittner.testmyself.deutsch.view.test.common.*">

    <fx:Script><![CDATA[
        import dittner.testmyself.deutsch.view.common.utils.AppColors;
        import dittner.testmyself.deutsch.view.common.utils.AppSizes;

        import mx.collections.ArrayCollection;

        //--------------------------------------
        //  title
        //--------------------------------------
        private var _title:String = "";
        [Bindable("titleChanged")]
        public function get title():String {return _title;}
        public function set title(value:String):void {
            if (_title != value) {
                _title = value;
                dispatchEvent(new Event("titleChanged"));
            }
        }

        //--------------------------------------
        //  themeColl
        //--------------------------------------
        private var _themeColl:ArrayCollection;
        [Bindable("themeCollChanged")]
        public function get themeColl():ArrayCollection {return _themeColl;}
        public function set themeColl(value:ArrayCollection):void {
            if (_themeColl != value) {
                _themeColl = value;
                dispatchEvent(new Event("themeCollChanged"));
            }
        }

        //--------------------------------------
        //  padding
        //--------------------------------------
        private var _padding:Number = 10;
        [Bindable("paddingChanged")]
        public function get padding():Number {return _padding;}
        public function set padding(value:Number):void {
            if (_padding != value) {
                _padding = value;
                dispatchEvent(new Event("paddingChanged"));
            }
        }
        ]]></fx:Script>

    <s:layout>
        <s:VerticalLayout gap="15" horizontalAlign="center"/>
    </s:layout>

    <common:TestHeader width="100%" height="30" padding="{padding}"
                       title="{title}"
                       description="Voreinstellungen"/>

    <list:ListForm id="themesList"
                   width="{width -2*padding}" height="100%"
                   dataProvider="{themeColl}"
                   title="Wählen Sie die Themen aus, um die Aufgaben zu filtern"
                   itemRenderer="dittner.testmyself.deutsch.view.common.renderer.ThemeItemRenderer"
                   allowMultipleSelection="true">
        <list:layout>
            <s:VerticalLayout gap="0" useVirtualLayout="false"/>
        </list:layout>
    </list:ListForm>

    <s:CheckBox id="useAudioRecordsBox"
                width="{width -2*padding}"
                selected="false"
                label="nur mit Audioaufnahmen"/>

    <s:HGroup width="{width -2*padding}" gap="0">
        <s:RadioButton id="highComplexityRadioBtn"
                       groupName="radioBar"
                       width="300"
                       value="high"
                       selected="true"
                       label="Schwierige Aufgaben"/>

        <s:Spacer width="100%"/>

        <s:RadioButton id="middleComplexityRadioBtn"
                       groupName="radioBar"
                       width="300"
                       value="middle"
                       label="Leichte Aufgaben"/>

        <s:Spacer width="100%"/>

        <s:RadioButton id="lowComplexityRadioBtn"
                       groupName="radioBar"
                       width="300"
                       value="low"
                       label="Leichteste Aufgaben"/>
    </s:HGroup>

    <s:Group width="100%" height="{AppSizes.EDITOR_FOOTER_HEIGHT}">

        <utils:BG width="100%" height="100%" color="{AppColors.SCREEN_HEADER_BG}"/>

        <button:GrayButton id="goBackBtn"
                           width="250"
                           verticalCenter="0"
                           left="{padding}"
                           label="Zurück"/>

        <button:BlackButton id="showResultsBtn"
                            width="250"
                            verticalCenter="0"
                            right="{2*padding + 250}"
                            label="Die Testendaten"/>

        <button:BlackButton id="startTestingBtn"
                            width="250"
                            verticalCenter="0"
                            right="{padding}"
                            label="Das Testen beginnen"/>
    </s:Group>
</s:Group>
