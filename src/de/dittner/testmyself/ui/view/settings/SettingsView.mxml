<?xml version="1.0"?>
<view:SmartView xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:s="library://ns.adobe.com/flex/spark"
                xmlns:core="de.dittner.testmyself.ui.common.view.*"
                xmlns:list="de.dittner.testmyself.ui.common.list.*"
                xmlns:utils="de.dittner.testmyself.ui.common.utils.*"
                xmlns:components="de.dittner.testmyself.ui.view.settings.components.*"
                horizontalCenter="0"
                currentState="inactive"
                xmlns:view="de.dittner.testmyself.ui.common.view.*">

    <fx:Script><![CDATA[
        import de.dittner.testmyself.ui.common.utils.AppColors;
        import de.dittner.testmyself.ui.common.utils.FontName;
        import de.dittner.testmyself.ui.common.view.ViewModelFactory;
        import de.dittner.testmyself.ui.view.settings.components.SettingsInfo;

        [Bindable]
        public var vm:SettingsVM;

        private static const TAB_BAR_HEI:uint = 40;

        override protected function activate():void {
            vm = ViewModelFactory.instance.settingsVM;
            vm.viewActivated(info);
            currentState = "common";
            tabBar.selectedIndex = 0;
            parseSettings(vm.settings);
        }

        private function parseSettings(settings:SettingsInfo):void {
            commonSettings.maxAudioRecordDurationSpinner.value = settings.maxAudioRecordDuration;
            commonSettings.hostInput.text = settings.backUpServerInfo.host;
            commonSettings.portInput.text = settings.backUpServerInfo.port.toString();
            commonSettings.userNameInput.text = settings.backUpServerInfo.user;
            commonSettings.pwdInput.text = settings.backUpServerInfo.password;
            commonSettings.remoteDirInput.text = settings.backUpServerInfo.remoteDirPath;
        }

        public function clear():void {
            currentState = "inactive";
        }

        private function tabBar_selectedItemChangeHandler(event:Event):void {
            currentState = tabBar.selectedItem.state;
        }

        private function storeSettings():void {
            vm.storeSettings(commonSettings.getSettings());
        }

        override protected function deactivate():void {
            super.deactivate();
            vm.viewDeactivated();
            storeSettings();
        }
        ]]></fx:Script>

    <core:states>
        <s:State name="inactive"/>
        <s:State name="common"/>
        <s:State name="word"/>
        <s:State name="verb"/>
        <s:State name="lesson"/>
        <s:State name="test"/>
    </core:states>
    <!--content bg-->
    <s:Rect width="100%" height="100%">
        <s:fill>
            <s:BitmapFill source="@Embed(source='/assets/screen/screen_bg_pattern.png')"
                          fillMode="repeat"/>
        </s:fill>
    </s:Rect>

    <!--header bg-->
    <s:Rect width="100%" height="{HEADER_HEI}">
        <s:fill>
            <s:SolidColor color="{AppColors.SCREEN_HEADER_BG}"/>
        </s:fill>
    </s:Rect>

    <utils:BG width="100%" top="{HEADER_HEI + PADDING + TAB_BAR_HEI}" bottom="0" color="#ffFFff"/>

    <s:Label text="{info.title}"
             fontFamily="{FontName.MYRIAD}"
             fontSize="18"
             width="100%" height="{HEADER_HEI}"
             verticalAlign="middle"
             paddingLeft="{PADDING}" paddingRight="{PADDING}"
             color="#54545d"/>

    <list:SelectableDataGroup id="tabBar"
                              excludeFrom="inactive"
                              left="{PADDING}" right="{PADDING}" height="{TAB_BAR_HEI}"
                              top="{HEADER_HEI+PADDING}"
                              selectedItemChange="tabBar_selectedItemChangeHandler(event)"
                              itemRenderer="de.dittner.testmyself.ui.view.settings.components.SettingsItemRenderer">
        <list:dataProvider>
            <s:ArrayCollection>
                <fx:Object label="Allgemein" state="common"/>
                <fx:Object label="Wörter" state="word"/>
                <fx:Object label="Starke Verben" state="verb"/>
                <fx:Object label="Übungen" state="lesson"/>
                <fx:Object label="Testen" state="test"/>
            </s:ArrayCollection>
        </list:dataProvider>
        <list:layout>
            <s:HorizontalLayout useVirtualLayout="false" gap="0" verticalAlign="bottom"/>
        </list:layout>
    </list:SelectableDataGroup>

    <s:Group left="{PADDING}" top="{HEADER_HEI + 2*PADDING + TAB_BAR_HEI}" right="{PADDING}" bottom="{PADDING}"
             excludeFrom="inactive">

        <components:CommonSettings id="commonSettings"
                                   vm="{vm}"
                                   width="100%" height="100%"
                                   visible.common="true" visible="false"/>

        <components:NoteSettings id="wordSettings"
                                 width="100%" height="100%"
                                 visible.word="true" visible="false"
                                 vocabulary="{vm.wordVocabulary}"/>

        <components:NoteSettings id="verbSettings"
                                 width="100%" height="100%"
                                 visible.verb="true" visible="false"
                                 vocabulary="{vm.verbVocabulary}"/>

        <components:NoteSettings id="lessonSettings"
                                 removeNotesByThemeRemoving="true"
                                 width="100%" height="100%"
                                 visible.lesson="true" visible="false"
                                 editLblText="Übungname ändern"
                                 removeLblText="Übung mit den Aufgaben entfernen"
                                 themesListTitle="Übungenliste"
                                 notificationText="Sind Sie sicher, die Übung mit den Aufgaben Sie entfernen möchten?"
                                 themeNameInputTitle="Geben Sie bitte den neuen Namen der Übung ein"
                                 vocabulary="{vm.lessonVocabulary}"/>

        <components:TestSettings id="testSettings"
                                 testColl="{vm.allTestColl}"
                                 width="100%" height="100%"
                                 visible.test="true" visible="false"/>

    </s:Group>

</view:SmartView>
