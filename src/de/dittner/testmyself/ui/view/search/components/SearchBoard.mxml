<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:button="de.dittner.testmyself.ui.common.button.*"
         xmlns:input="de.dittner.testmyself.ui.common.input.*"
         currentState="collapsed">
    <fx:Metadata>
        [Event(name="startSearch", type="flash.events.Event")]
    </fx:Metadata>

    <fx:Script><![CDATA[
        import de.dittner.testmyself.model.Device;
        import de.dittner.testmyself.ui.common.utils.AppSizes;

        [Embed(source='/assets/menu/screen_bg_pattern.png')]
        private static const BgClass:Class;
        private static var bgBitmapData:BitmapData;

        override protected function measure():void {
            super.measure();
            measuredHeight = measuredMinHeight = currentState == "normal" ? 150 : 90;
        }

        override protected function updateDisplayList(w:Number, h:Number):void {
            super.updateDisplayList(w, h);
            var g:Graphics = graphics;
            g.clear();
            if (!bgBitmapData) bgBitmapData = (new BgClass() as Bitmap).bitmapData;
            g.beginBitmapFill(bgBitmapData);
            g.drawRect(0, 0, w, h);
            g.endFill();
        }

        private static var history:TextHistory = new TextHistory();
        private function undoSearch():void {
            history.undo();
            updateSearchInput();
        }

        private function redoSearch():void {
            history.redo();
            updateSearchInput();
        }

        public function updateSearchInput():void {
            searchInput.text = history.row;
            if (Device.isDesktop) Device.stage.focus = searchInput;
            searchInput.selectAll();
        }

        private function startSearch():void {
            if (searchInput.text.length <= 1) return;

            FoundNoteRenderer.searchingText = searchInput.text;

            if (history.row != searchInput.text)
                history.push(searchInput.text);

            updateSearchInput();
            dispatchEvent(new Event("startSearch"));
        }
        ]]></fx:Script>
    <s:states>
        <s:State name="normal"/>
        <s:State name="collapsed"/>
    </s:states>

    <s:layout>
        <s:VerticalLayout gap="15" paddingTop="20" paddingRight="20" paddingLeft="20" paddingBottom="10"/>
    </s:layout>

    <s:HGroup width="100%"
              height="50"
              gap="30" horizontalAlign="center"
              visible="true" includeInLayout="true"
              visible.collapsed="false" includeInLayout.collapsed="false">
        <s:CheckBox id="wordBox"
                    label="Wörter" selected="true"/>

        <s:CheckBox id="verbBox"
                    label="Starke Verben" selected="true"/>

        <s:CheckBox id="lessonBox"
                    label="Übungen" selected="true"/>

        <s:CheckBox id="examplesBox" label="Beispiele" selected="true"/>

    </s:HGroup>

    <s:HGroup width="100%"
              gap="10" verticalAlign="bottom">

        <s:HGroup width="{width/2 - 20 + AppSizes.MENU_WID/2}" gap="10" verticalAlign="bottom">
            <input:TextInputForm id="searchInput"
                                 top="{AppSizes.EDITOR_FOOTER_HEIGHT + 15}"
                                 width="100%"
                                 left="15"
                                 maxChars="{Device.MAX_THEME_NAME_LENGTH}"
                                 title="Für die Suche ein Wort oder einen Satz eingeben"
                                 enter="startSearch()"/>

            <button:BitmapButton id="undoBtn"
                                 enabled="{history.canUndo}"
                                 upImage="@Embed(source='/assets/button/history_undo_btn_up.png')"
                                 downImage="@Embed(source='/assets/button/history_undo_btn_down.png')"
                                 click="undoSearch()"/>

            <button:BitmapButton id="redoBtn"
                                 enabled="{history.canRedo}"
                                 upImage="@Embed(source='/assets/button/history_redo_btn_up.png')"
                                 downImage="@Embed(source='/assets/button/history_redo_btn_down.png')"
                                 click="redoSearch()"/>
        </s:HGroup>

        <button:BlackButton id="applyBtn"
                            width="100%"
                            enabled="{searchInput.text.length > 1}"
                            label="Suchen"
                            click="startSearch()"/>

        <button:BitmapButton id="openFilterBtn"
                             visible="false" includeInLayout="false"
                             visible.collapsed="true" includeInLayout.collapsed="true"
                             upImage="@Embed(source='/assets/button/search_open_filter_btn_up.png')"
                             downImage="@Embed(source='/assets/button/search_open_filter_btn_down.png')"
                             click="setCurrentState('normal')"/>

        <button:BitmapButton id="closeFilterBtn"
                             visible="false" includeInLayout="false"
                             visible.normal="true" includeInLayout.normal="true"
                             upImage="@Embed(source='/assets/button/search_close_filter_btn_up.png')"
                             downImage="@Embed(source='/assets/button/search_close_filter_btn_down.png')"
                             click="setCurrentState('collapsed')"/>

    </s:HGroup>

</s:Group>
