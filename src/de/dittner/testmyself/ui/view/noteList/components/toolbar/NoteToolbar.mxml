<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:tile="de.dittner.testmyself.ui.common.tile.*">

    <fx:Metadata>
        [Event(name="selected", type="de.dittner.testmyself.ui.view.noteList.components.toolbar.ToolbarEvent")]
    </fx:Metadata>

    <fx:Script><![CDATA[
        import de.dittner.testmyself.ui.common.tile.TileID;
        import de.dittner.testmyself.ui.common.utils.AppColors;
        import de.dittner.testmyself.utils.Values;

        public function revert():void {
            goBackBtn.enabled = false;
            addNoteBtn.enabled = false;
            editNoteBtn.enabled = false;
            removeNoteBtn.enabled = false;
            hideDetailsBtn.enabled = false;
            transInvertBtn.enabled = false;
            filterBtn.enabled = false;
            playCommentBtn.enabled = false;
            setTaskAsRightBtn.enabled = false;
            showFailedTasksBtn.enabled = false;
            hideDetailsBtn.selected = false;
            showFailedTasksBtn.selected = true;
            nextBtn.enabled = false;
            prevBtn.enabled = false;
        }

        private function notifyToolAction(action:String):void {
            dispatchEvent(new ToolbarEvent(ToolbarEvent.SELECTED, action));
        }

        override protected function updateDisplayList(w:Number, h:Number):void {
            super.updateDisplayList(w, h);
            var g:Graphics = graphics;
            g.clear();
            g.beginFill(AppColors.SCREEN_FOOTER_BG);
            g.drawRect(0, 0, w, h);
            g.endFill();
        }
        ]]></fx:Script>

    <s:layout>
        <s:VerticalLayout id="verLayout"
                          gap="{Values.PT5}" verticalAlign="top" horizontalAlign="center"/>
    </s:layout>

    <tile:FadeTileButton id="goBackBtn"
                         visible="{goBackBtn.enabled}"
                         includeInLayout="{goBackBtn.enabled}"
                         upTileID="{TileID.TOOLBAR_GO_BACK}"
                         click="notifyToolAction(ToolAction.GO_BACK)"/>

    <s:Spacer height="30%"
              visible="{goBackBtn.enabled}" includeInLayout="{goBackBtn.enabled}"/>

    <tile:FadeTileButton id="addNoteBtn"
                         upTileID="{TileID.TOOLBAR_ADD}"
                         click="notifyToolAction(ToolAction.CREATE_NOTE)"/>

    <tile:FadeTileButton id="editNoteBtn"
                         upTileID="{TileID.TOOLBAR_EDIT}"
                         click="notifyToolAction(ToolAction.EDIT_NOTE)"/>

    <tile:FadeTileButton id="removeNoteBtn"
                         upTileID="{TileID.TOOLBAR_DELETE}"
                         click="notifyToolAction(ToolAction.REMOVE_NOTE)"/>

    <s:Spacer height="30%"/>

    <tile:FadeTileButton id="hideDetailsBtn"
                         isToggle="true"
                         visible="{hideDetailsBtn.enabled}"
                         includeInLayout="{hideDetailsBtn.enabled}"
                         selected="false"
                         upTileID="{TileID.TOOLBAR_COLLAPSED_LIST}"
                         downTileID="{TileID.TOOLBAR_EXPANDED_LIST}"
                         click="notifyToolAction(hideDetailsBtn.selected ? ToolAction.SHOW_DETAILS : ToolAction.HIDE_DETAILS)"/>

    <tile:FadeTileButton id="transInvertBtn"
                         visible="{transInvertBtn.enabled}"
                         includeInLayout="{transInvertBtn.enabled}"
                         upTileID="{TileID.TOOLBAR_INVERSE_TRANSLATION}"
                         click="notifyToolAction(ToolAction.INVERT)"/>

    <tile:FadeTileButton id="filterBtn"
                         visible="{filterBtn.enabled}"
                         includeInLayout="{filterBtn.enabled}"
                         upTileID="{TileID.TOOLBAR_FILTER}"
                         click="notifyToolAction(ToolAction.FILTER)"/>

    <tile:FadeTileButton id="showFailedTasksBtn"
                         isToggle="true"
                         visible="{showFailedTasksBtn.enabled}"
                         includeInLayout="{showFailedTasksBtn.enabled}"
                         selected="true"
                         upTileID="{TileID.TOOLBAR_SHOW_ALL_TASK}"
                         downTileID="{TileID.TOOLBAR_SHOW_FAILED_TASK}"
                         click="notifyToolAction(showFailedTasksBtn.selected ? ToolAction.SHOW_FAILED_TASK : ToolAction.SHOW_ALL_TASK)"/>

    <tile:FadeTileButton id="setTaskAsRightBtn"
                         visible="{showFailedTasksBtn.enabled}"
                         includeInLayout="{showFailedTasksBtn.enabled}"
                         upTileID="{TileID.TOOLBAR_SET_TASK_AS_RIGHT}"
                         click="notifyToolAction(ToolAction.SET_TASK_AS_RIGHT)"/>

    <s:Spacer height="30%"
              visible="{prevBtn.enabled}"
              includeInLayout="{prevBtn.enabled}"/>

    <tile:FadeTileButton id="prevBtn"
                         visible="{prevBtn.enabled}"
                         includeInLayout="{prevBtn.enabled}"
                         upTileID="{TileID.TOOLBAR_PREV}"
                         click="notifyToolAction(ToolAction.PREV_NOTE)"/>

    <tile:FadeTileButton id="nextBtn"
                         visible="{nextBtn.enabled}"
                         includeInLayout="{nextBtn.enabled}"
                         upTileID="{TileID.TOOLBAR_NEXT}"
                         click="notifyToolAction(ToolAction.NEXT_NOTE)"/>

    <s:Spacer height="30%"/>

    <tile:FadeTileButton id="playCommentBtn"
                         upTileID="{TileID.TOOLBAR_PLAY_AUDIO}"
                         click="notifyToolAction(ToolAction.PLAY_AUDIO)"/>

    <s:Spacer height="100%"/>

</s:Group>
