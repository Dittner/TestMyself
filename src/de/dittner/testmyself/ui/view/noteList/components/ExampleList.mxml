<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:utils="de.dittner.testmyself.ui.common.utils.*"
         xmlns:list="de.dittner.testmyself.ui.view.noteList.components.*">

    <fx:Script><![CDATA[
        import de.dittner.testmyself.model.domain.note.Note;
        import de.dittner.testmyself.ui.common.utils.AppColors;
        import de.dittner.testmyself.ui.common.utils.FontName;
        import de.dittner.testmyself.utils.Values;

        import mx.collections.ArrayCollection;

        //--------------------------------------
        //  dataProvider
        //--------------------------------------
        private var _dataProvider:ArrayCollection;
        [Bindable("dataProviderChanged")]
        public function get dataProvider():ArrayCollection {return _dataProvider;}
        public function set dataProvider(value:ArrayCollection):void {
            if (_dataProvider != value) {
                _dataProvider = value;
                dispatchEvent(new Event("dataProviderChanged"));
            }
        }

        //--------------------------------------
        //  selectedNote
        //--------------------------------------
        private var _selectedNote:Note;
        [Bindable("selectedNoteChanged")]
        public function get selectedNote():Note {return _selectedNote;}
        public function set selectedNote(value:Note):void {
            if (_selectedNote != value) {
                _selectedNote = value;
                dispatchEvent(new Event("selectedNoteChanged"));
            }
        }

        //--------------------------------------
        //  shownList
        //--------------------------------------
        private var _shownList:Boolean = true;
        [Bindable("shownListChanged")]
        public function get shownList():Boolean {return _shownList;}
        public function set shownList(value:Boolean):void {
            if (_shownList != value) {
                _shownList = value;
                dispatchEvent(new Event("shownListChanged"));
            }
        }

        //--------------------------------------
        //  showTitle
        //--------------------------------------
        private var _showTitle:Boolean = true;
        [Bindable("showTitleChanged")]
        public function get showTitle():Boolean {return _showTitle;}
        public function set showTitle(value:Boolean):void {
            if (_showTitle != value) {
                _showTitle = value;
                dispatchEvent(new Event("showTitleChanged"));
            }
        }
        ]]></fx:Script>

    <utils:BG left="0" right="0" top="0" bottom="0" color="{AppColors.EXAMPLES_BG}"/>

    <s:Label text="{resourceManager.getString('app', 'Examples')}"
             fontFamily="{FontName.MYRIAD_COND}"
             fontSize="{Values.PT20}"
             fontWeight="bold"
             mouseChildren="false" mouseEnabled="false"
             left="{Values.PT15}" right="{Values.PT15}"
             visible="{showTitle}"
             color="{AppColors.TEXT_LIGHT}"/>

    <s:Scroller left="0" right="0" top="{showTitle ? Values.PT25 : 0}" bottom="0"
                hasFocusableChildren="false">
        <list:NoteList id="list"
                       selectedItem="{selectedNote}"
                       dataProvider="{dataProvider}"
                       visible="{shownList}"
                       width="100%"
                       deselectEnabled="true"
                       itemRenderer="de.dittner.testmyself.ui.view.noteList.components.renderer.ExampleRenderer"
                       selectedItemChange="selectedNote = list.selectedItem as Note">
            <list:layout>
                <s:VerticalLayout gap="0" useVirtualLayout="true"/>
            </list:layout>
        </list:NoteList>
    </s:Scroller>
</s:Group>