<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:input="de.dittner.testmyself.ui.common.input.*">

    <fx:Metadata>
        [Event(name="change", type="spark.events.TextOperationEvent")]
    </fx:Metadata>

    <fx:Script><![CDATA[
        import de.dittner.testmyself.model.Device;
        import de.dittner.testmyself.ui.common.utils.NoteFormUtils;

        import spark.components.supportClasses.TextInputOperation;
        import spark.events.TextOperationEvent;

        public function clear():void {
            infinitive = "";
            present = "";
            past = "";
            perfect = "";
            if (infinitiveInput) infinitiveInput.isValidInput = true;
        }

        //--------------------------------------
        //  infinitive
        //--------------------------------------
        private var _infinitive:String = "";
        [Bindable("infinitiveChanged")]
        public function get infinitive():String {return _infinitive;}
        public function set infinitive(value:String):void {
            _infinitive = value;
            dispatchEvent(new Event("infinitiveChanged"));
        }

        //--------------------------------------
        //  present
        //--------------------------------------
        private var _present:String = "";
        [Bindable("presentChanged")]
        public function get present():String {return _present;}
        public function set present(value:String):void {
            _present = value;
            dispatchEvent(new Event("presentChanged"));
        }

        //--------------------------------------
        //  past
        //--------------------------------------
        private var _past:String = "";
        [Bindable("pastChanged")]
        public function get past():String {return _past;}
        public function set past(value:String):void {
            _past = value;
            dispatchEvent(new Event("pastChanged"));
        }

        //--------------------------------------
        //  perfect
        //--------------------------------------
        private var _perfect:String = "";
        [Bindable("perfectChanged")]
        public function get perfect():String {return _perfect;}
        public function set perfect(value:String):void {
            _perfect = value;
            dispatchEvent(new Event("perfectChanged"));
        }

        private const regexp:RegExp = NoteFormUtils.LETTERS_AND_SYMBOLS;
        private function wordValidationHandler(event:TextOperationEvent):void {
            if (event.operation is TextInputOperation) {
                var match:Object = regexp.exec((event.operation as TextInputOperation).text);
                if (match == null) event.preventDefault();
            }
        }
        ]]></fx:Script>

    <s:layout>
        <s:VerticalLayout gap="15" paddingLeft="118"/>
    </s:layout>

    <input:TextInputForm id="infinitiveInput"
                         changing="wordValidationHandler(event)"
                         change="dispatchEvent(event.clone())"
                         text="{infinitive}"
                         width="100%"
                         maxChars="{Device.MAX_WORD_LENGTH}"
                         title="Infinitiv"/>

    <input:TextInputForm id="presentInput"
                         changing="wordValidationHandler(event)"
                         text="{present}"
                         width="100%"
                         maxChars="{Device.MAX_WORD_LENGTH}"
                         title="Präsens"/>

    <input:TextInputForm id="pastInput"
                         changing="wordValidationHandler(event)"
                         text="{past}"
                         width="100%"
                         maxChars="{Device.MAX_WORD_LENGTH}"
                         title="Präteritum"/>

    <input:TextInputForm id="perfectInput"
                         changing="wordValidationHandler(event)"
                         text="{perfect}"
                         width="100%"
                         maxChars="{Device.MAX_WORD_LENGTH}"
                         title="Partizip II"/>

</s:Group>
