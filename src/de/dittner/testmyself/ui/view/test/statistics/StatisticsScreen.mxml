<?xml version="1.0"?>
<common:Container xmlns:fx="http://ns.adobe.com/mxml/2009"
                  xmlns:note="de.dittner.testmyself.ui.common.note.*"
                  xmlns:common="de.dittner.testmyself.ui.common.*">

    <fx:Script><![CDATA[
        import de.dittner.testmyself.model.domain.test.TestID;
        import de.dittner.testmyself.ui.common.menu.IActionMenu;
        import de.dittner.testmyself.ui.common.menu.NoteToolbar;
        import de.dittner.testmyself.ui.view.test.TestVM;

        public var needSelectFirstNote:Boolean = false;
        public var needSelectLastNote:Boolean = false;

        //--------------------------------------
        //  padding
        //--------------------------------------
        private var _padding:uint = 0;
        [Bindable("paddingChanged")]
        public function get padding():uint {return _padding;}
        public function set padding(value:uint):void {
            if (_padding != value) {
                _padding = value;
                dispatchEvent(new Event("paddingChanged"));
            }
        }

        //--------------------------------------
        //  vm
        //--------------------------------------
        private var _vm:TestVM;
        [Bindable("vmChanged")]
        public function get vm():TestVM {return _vm;}
        public function set vm(value:TestVM):void {
            if (_vm != value) {
                _vm = value;
                dispatchEvent(new Event("vmChanged"));
            }
        }

        //----------------------------------------------------------------------------------------------
        //
        //  Methods
        //
        //----------------------------------------------------------------------------------------------
        private var needTranslationInvert:Boolean = false;

        public function activate(toolbar:NoteToolbar, actionMenu:IActionMenu):void {
            vm.testPage.number = 0;
            vm.testPage.countAllNotes = true;
            vm.loadStatisticsPage();
            actionMenu.hide();
            noteContent.activate(toolbar, actionMenu);
            noteContent.showWordArticle = vm.testPage.test.id != TestID.DE_SELECT_ARTICLE;
            noteContent.showNotesInverted = vm.testPage.test.translateFromNativeIntoForeign;
            visible = true;
        }

        public function deactivate():void {
            noteContent.deactivate();
            visible = false;
        }

        private function setTaskAsRightBtnEnabled(selectedTask:*, isFailedTaskShown:Boolean):Boolean {
            return selectedTask && isFailedTaskShown;
        }

        private function pageNumChanged():void {
            vm.loadStatisticsPage();
        }
        ]]></fx:Script>

    <note:NoteContent id="noteContent"
                      width="{width}" height="100%"
                      selectedItem="@{vm.selectedTestTask}"
                      dataProvider="{vm.testPage.coll}"
                      page="{vm.testPage}"
                      pageNumChanged="pageNumChanged()"/>

</common:Container>
