<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:navigation="de.dittner.testmyself.ui.view.noteList.components.pagination.*"
         xmlns:utils="de.dittner.testmyself.ui.common.utils.*"
         xmlns:common2="de.dittner.testmyself.ui.view.noteList.components.*">

    <fx:Script><![CDATA[
        import de.dittner.testmyself.model.domain.test.TestTask;
        import de.dittner.testmyself.ui.common.utils.AppColors;
        import de.dittner.testmyself.ui.common.utils.AppSizes;
        import de.dittner.testmyself.ui.view.test.TestVM;

        //--------------------------------------
        //  padding
        //--------------------------------------
        private var _padding:uint = 0;
        [Bindable("paddingChanged")]
        public function get padding():uint {return _padding;}
        public function set padding(value:uint):void {
            if (_padding != value) {
                _padding = value;
                dispatchEvent(new Event("paddingChanged"));
            }
        }

        //--------------------------------------
        //  vm
        //--------------------------------------
        private var _vm:TestVM;
        [Bindable("vmChanged")]
        public function get vm():TestVM {return _vm;}
        public function set vm(value:TestVM):void {
            if (_vm != value) {
                _vm = value;
                dispatchEvent(new Event("vmChanged"));
            }
        }

        //----------------------------------------------------------------------------------------------
        //
        //  Methods
        //
        //----------------------------------------------------------------------------------------------
        private var needTranslationInvert:Boolean = false;

        public function activate():void {
            vm.testPage.number = 0;
            vm.testPage.countAllNotes = true;
            vm.loadStatisticsPage();
            list.pageLayout.inverted = vm.testPage.test.translateFromNativeIntoForeign;
        }

        private function setTaskAsRightBtnEnabled(selectedTask:*, isFailedTaskShown:Boolean):Boolean {
            return selectedTask && isFailedTaskShown;
        }

        private function pageNumChanged():void {
            vm.loadStatisticsPage();
        }
        ]]></fx:Script>

    <utils:BG width="100%" height="100%" color="{AppColors.BG}"/>

    <s:Scroller left="0" percentWidth="{exampleList.visible ? 50 : 100}" top="0" bottom="{AppSizes.EDITOR_FOOTER_HEIGHT}"
                horizontalScrollPolicy="off"
                hasFocusableChildren="false">
        <common2:NoteList id="list"
                          selectedItem="{vm.selectedTestTask}"
                          dataProvider="{vm.testPage.taskColl}"
                          width="100%"
                          deselectEnabled="true"
                          itemRenderer="de.dittner.testmyself.ui.view.test.statistics.StatisticsTaskRenderer"
                          selectedItemChange="vm.selectedTestTask = list.selectedItem as TestTask">
            <common2:layout>
                <s:VerticalLayout gap="0" useVirtualLayout="false"/>
            </common2:layout>
        </common2:NoteList>
    </s:Scroller>

    <common2:ExampleList id="exampleList"
                         width="50%" top="0" bottom="{AppSizes.EDITOR_FOOTER_HEIGHT + themesLbl.height}"
                         right="0"
                         dataProvider="{vm.selectedTestTask.note.exampleColl}"
                         selectedNote="@{vm.selectedNoteExample}"
                         visible="{vm.testPage.test.loadExamplesWhenTesting}"
                         includeInLayout="{vm.testPage.test.loadExamplesWhenTesting}"
                         showTitle="false"
                         hasFocusableChildren="false"/>

    <s:Label id="themesLbl"
             text="{vm.selectedNoteThemes}"
             backgroundAlpha="{exampleList.visible ? 1 : 0}"
             backgroundColor="{AppColors.EXAMPLES_BG}"
             height="20" bottom="{AppSizes.EDITOR_FOOTER_HEIGHT}"
             width="50%" paddingLeft="10" paddingRight="10"
             right="0" textAlign="right"
             fontSize="12" verticalAlign="middle"
             maxDisplayedLines="1"
             color="{AppColors.TEXT_DARK}"/>

    <s:Group width="100%" bottom="0" height="{AppSizes.EDITOR_FOOTER_HEIGHT}">

        <utils:BG width="100%" height="100%" color="{AppColors.SCREEN_FOOTER_BG}"/>

        <navigation:PaginationBar id="paginationBar"
                                  horizontalCenter="0"
                                  height="100%"
                                  allNotesAmount="{vm.testPage.amountAllTasks}"
                                  notesOnCurPage="{vm.testPage.taskColl.length}"
                                  pageSize="{vm.testPage.size}"
                                  pageNum="@{vm.testPage.number}"
                                  pageNumChanged="pageNumChanged()"/>

        <s:Label id="titleLbl"
                 width="50%"
                 text="{'Statistik fÃ¼r das Test: ' + vm.testPage.test.title}"
                 right="10" textAlign="right"
                 fontSize="14" verticalCenter="1"
                 maxDisplayedLines="1"
                 mouseEnabled="false"
                 color="{AppColors.TEXT_DARK}"/>

    </s:Group>
</s:Group>
