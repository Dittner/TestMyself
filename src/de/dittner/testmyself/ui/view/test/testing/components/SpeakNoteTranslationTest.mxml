<?xml version="1.0"?>
<test:TestableView xmlns:fx="http://ns.adobe.com/mxml/2009"
                   xmlns:s="library://ns.adobe.com/flex/spark"
                   xmlns:button="de.dittner.testmyself.ui.common.button.*"
                   xmlns:test="de.dittner.testmyself.ui.view.test.testing.components.*">

    <fx:Script><![CDATA[
        import de.dittner.testmyself.model.domain.note.DeWord;

        //--------------------------------------
        //  translateFromNativeIntoForeign
        //--------------------------------------
        private var _translateFromNativeIntoForeign:Boolean = false;
        [Bindable("translateFromNativeIntoForeignChanged")]
        public function get translateFromNativeIntoForeign():Boolean {return _translateFromNativeIntoForeign;}
        public function set translateFromNativeIntoForeign(value:Boolean):void {
            if (_translateFromNativeIntoForeign != value) {
                _translateFromNativeIntoForeign = value;
                dispatchEvent(new Event("translateFromNativeIntoForeignChanged"));
            }
        }

        override protected function updateForm():void {
            clear();

            if (note) {
                titleBoard.text = translateFromNativeIntoForeign ? note.description : note.title;
                translateBoard.text = translateFromNativeIntoForeign ? noteToTitle() : note.description;
            }
        }

        private function noteToTitle():String {
            var res:String;
            if (note is DeWord) {
                var w:DeWord = note as DeWord;
                res = w.article ? w.article + " " : "";
                res += w.title;
                res += w.declension ? ", " + w.declension : "";
            }
            else {
                res = note ? note.title : ""
            }
            return res;
        }

        override protected function clear():void {
            showDetails = false;
            titleBoard.text = "";
            translateBoard.text = "";
        }

        private function optionsEnabled(showDetails:Boolean, options:String):Boolean {
            return showDetails && options;
        }

        private function onCorrectAnswered():void {
            notifyTrueAnswer();
            requestNextTask();
        }

        private function onIncorrectAnswered():void {
            notifyFalseAnswer();
            requestNextTask();
        }
        ]]></fx:Script>

    <test:layout>
        <s:VerticalLayout gap="15" horizontalAlign="center"/>
    </test:layout>

    <test:TextBoard id="titleBoard"
                    width="{width - 2*padding}" height="100%"
                    title="Deutschtext"/>

    <test:TextBoard id="translateBoard"
                    questionsIconEnabled="true"
                    width="{width - 2*padding}" height="100%"
                    title="Ãœbersetzung" showText="{showDetails}"/>

    <s:HGroup width="100%"
              horizontalAlign="center"
              gap="15">
        <button:BlackButton id="correctAnswerBtn"
                            width="250"
                            enabled="{isProcessing}"
                            label="Richtig"
                            click="onCorrectAnswered()"/>

        <button:RedButton id="incorrectAnswerBtn"
                          width="250"
                          enabled="{isProcessing}"
                          label="Falsch"
                          click="onIncorrectAnswered()"/>

        <button:YellowButton id="showAnswerBtn"
                             width="250"
                             label="Die Antwort zeigen"
                             click="showDetails = true"/>

    </s:HGroup>

</test:TestableView>
