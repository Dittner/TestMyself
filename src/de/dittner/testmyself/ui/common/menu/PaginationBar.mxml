<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:menu="de.dittner.testmyself.ui.common.menu.*">

    <fx:Metadata>
        [Event(name="pageNumChanged", type="flash.events.Event")]
    </fx:Metadata>
    <fx:Script><![CDATA[
        import de.dittner.testmyself.ui.common.page.NotePage;
        import de.dittner.testmyself.ui.common.tile.TileID;
        import de.dittner.testmyself.ui.common.utils.AppColors;
        import de.dittner.testmyself.ui.common.utils.FontName;
        import de.dittner.testmyself.utils.Values;

        //--------------------------------------
        //  page
        //--------------------------------------
        private var _page:NotePage;
        [Bindable("pageChanged")]
        public function get page():NotePage {return _page;}
        public function set page(value:NotePage):void {
            if (_page != value) {
                _page = value;
                dispatchEvent(new Event("pageChanged"));
            }
        }

        private function nextPageBtnClickHandler(event:MouseEvent):void {
            if (page && page.number < page.totalPages - 1) {
                page.number++;
                dispatchEvent(new Event("pageNumChanged"));
            }
        }

        private function lastPageBtnClickHandler(event:MouseEvent):void {
            if (page) {
                page.number = page.totalPages - 1;
                dispatchEvent(new Event("pageNumChanged"));
            }
        }

        private function firstPageBtnClickHandler(event:MouseEvent):void {
            if (page) {
                page.number = 0;
                dispatchEvent(new Event("pageNumChanged"));
            }
        }

        private function prevPageBtnClickHandler(event:MouseEvent):void {
            if (page && page.number > 0) {
                page.number--;
                dispatchEvent(new Event("pageNumChanged"));
            }
        }

        private function prevPageBtnEnabled(pageNum:int):Boolean {
            return pageNum > 0;
        }

        private function firstPageBtnEnabled(pageNum:int):Boolean {
            return pageNum > 0;
        }

        private function nextPageBtnEnabled(pageNum:int, totalPages:int):Boolean {
            return pageNum + 1 < totalPages;
        }

        private function lastPageBtnEnabled(pageNum:int, totalPages:int):Boolean {
            return pageNum + 1 < totalPages;
        }
        ]]></fx:Script>

    <s:layout>
        <s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" gap="{Values.PT5}"/>
    </s:layout>

    <s:Spacer width="50%"/>

    <menu:MenuButton id="prevPageBtn"
                     upTileID="{prevPageBtn.mouseEnabled ? TileID.MENU_PREV_PAGE_ICON : TileID.MENU_PREV_PAGE_DISABLED_ICON}"
                     disabledTileID="{TileID.MENU_PREV_PAGE_RED_ICON}"
                     mouseEnabled="{prevPageBtnEnabled(page.number)}"
                     click="prevPageBtnClickHandler(event)"
                     enabled="{enabled}"/>

    <s:Spacer width="{Values.PT15}"/>

    <menu:MenuButton id="firstPageBtn"
                     upTileID="{firstPageBtn.mouseEnabled ? TileID.MENU_PAGE_ICON : TileID.MENU_PAGE_DISABLED_ICON}"
                     disabledTileID="{TileID.MENU_PAGE_RED_ICON}"
                     isBold="true"
                     title="{firstPageBtn.mouseEnabled ? '1' : ''}"
                     paddingLeft="0" paddingRight="0"
                     mouseEnabled="{firstPageBtnEnabled(page.number)}"
                     textColor="#0"
                     font="{FontName.MYRIAD_COND_MX}"
                     fontSize="{Values.PT15}"
                     click="firstPageBtnClickHandler(event)"
                     enabled="{enabled}"/>

    <menu:MenuButton id="curPageBtn"
                     upTileID="{TileID.MENU_PAGE_ICON}"
                     disabledTileID="{TileID.MENU_PAGE_RED_ICON}"
                     upBgAlpha="0.8"
                     title="{page.number + 1}"
                     mouseEnabled="false" mouseChildren="false"
                     isBold="true"
                     paddingLeft="0" paddingRight="0"
                     textColor="#0"
                     font="{FontName.MYRIAD_COND_MX}"
                     fontSize="{Values.PT15}"
                     enabled="{enabled}"/>

    <menu:MenuButton id="lastPageBtn"
                     upTileID="{lastPageBtn.mouseEnabled ? TileID.MENU_PAGE_ICON : TileID.MENU_PAGE_DISABLED_ICON}"
                     disabledTileID="{TileID.MENU_PAGE_RED_ICON}"
                     isBold="true"
                     paddingLeft="0" paddingRight="0"
                     mouseEnabled="{lastPageBtnEnabled(page.number, page.totalPages)}"
                     textColor="#0"
                     title="{lastPageBtn.mouseEnabled ? page.totalPages.toString() : ''}"
                     font="{FontName.MYRIAD_COND_MX}"
                     fontSize="{Values.PT15}"
                     enabled="{enabled}"
                     click="lastPageBtnClickHandler(event)"/>

    <s:Spacer width="{Values.PT15}"/>

    <menu:MenuButton id="nextPageBtn"
                     upTileID="{nextPageBtn.mouseEnabled ? TileID.MENU_NEXT_PAGE_ICON : TileID.MENU_NEXT_PAGE_DISABLED_ICON}"
                     disabledTileID="{TileID.MENU_NEXT_PAGE_RED_ICON}"
                     mouseEnabled="{nextPageBtnEnabled(page.number, page.totalPages)}"
                     enabled="{enabled}"
                     click="nextPageBtnClickHandler(event)"/>

    <s:Label text="{page.selectedTag.name}"
             height="100%" width="50%" textAlign="right" paddingRight="{Values.PT10}"
             fontSize="{Values.PT13}" verticalAlign="middle" paddingTop="1"
             maxDisplayedLines="2"
             alpha="0.6"
             color="{AppColors.WHITE}"/>

</s:Group>